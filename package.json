{
  "name": "firefox-voice",
  "id": "firefox-voice@mozilla.org",
  "description": "This is a WebExtension that allows the browser to be voice-controlled.",
  "private": true,
  "version": "0.19.0",
  "engines": {
    "node": ">=12.0.0"
  },
  "author": {
    "name": "Mozilla Emerging Technologies",
    "url": "https://github.com/mozilla/firefox-voice"
  },
  "bugs": {
    "url": "https://github.com/mozilla/firefox-voice/issues"
  },
  "devDependencies": {
    "@babel/cli": "^7.6.4",
    "@babel/core": "^7.6.4",
    "@babel/node": "^7.8.4",
    "@babel/plugin-proposal-class-properties": "^7.5.5",
    "@babel/plugin-transform-modules-commonjs": "^7.8.3",
    "@babel/plugin-transform-react-jsx": "^7.3.0",
    "@babel/preset-env": "^7.8.4",
    "babel-eslint": "^10.0.3",
    "babel-jest": "^25.1.0",
    "concurrently": "^5.0.0",
    "ejs": "^2.6.2",
    "eslint": "^6.8.0",
    "eslint-plugin-babel": "^5.3.0",
    "eslint-plugin-class-property": "^1.1.0",
    "eslint-plugin-fetch-options": "0.0.5",
    "eslint-plugin-jsx-a11y": "^6.2.3",
    "eslint-plugin-mozilla": "^1.3.0",
    "eslint-plugin-no-unsanitized": "^3.0.2",
    "eslint-plugin-prettier": "^3.1.0",
    "eslint-plugin-react": "^7.16.0",
    "eslint-plugin-react-hooks": "^2.5.0",
    "geckodriver": "^1.19.1",
    "glob": "^7.1.6",
    "htmllint-cli": "0.0.7",
    "jest": "^25.1.0",
    "markdown-it": "^10.0.0",
    "nodemon": "^2.0.2",
    "npm-run-all": "^4.1.3",
    "prettier": "1.18.2",
    "prettier-linter-helpers": "^1.0.0",
    "stylelint": "^10.1.0",
    "stylelint-config-prettier": "^5.2.0",
    "stylelint-config-standard": "^18.3.0",
    "stylelint-prettier": "^1.1.1",
    "toml": "^3.0.0",
    "web-ext": "^3.1.1"
  },
  "dependencies": {
    "@picovoice/porcupine_manager": "^1.3.0",
    "@sentry/browser": "^5.6.3",
    "browserify": "^16.5.0",
    "freeze-dry": "^0.2.4",
    "fuse.js": "^3.4.5",
    "lottie-web": "^5.5.7",
    "react": "^16.11.0",
    "react-dom": "^16.11.0",
    "semver": "^7.1.3",
    "selenium-webdriver": "^4.0.0-alpha.7",
    "webextension-polyfill": "^0.3.1",
    "webrtcvad_js": "^1.0.0"
  },
  "homepage": "https://github.com/mozilla/firefox-voice",
  "license": "MPL-2.0",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mozilla/firefox-voice.git"
  },
  "jest": {
    "transform": {
      "\\.js$": [
        "babel-jest"
      ]
    }
  },
  "scripts": {
    "start": "concurrently --kill-others --success first --names watch,browser 'npm run watch' 'npm run start-and-build'",
    "start-and-build": "NO_SENTRY=1 IN_DEVELOPMENT=1 npm-run-all maybeinstall build:templates build:manifest build:intent-metadata start-extension",
    "start-extension": "mkdir -p ${PROFILE:-Profile} && web-ext run --firefox-profile ${PROFILE:-Profile}/ --keep-profile-changes --firefox \"${FIREFOX:-nightly}\" --source-dir extension/ --browser-console --pref=extensions.experiments.enabled=true",
    "start-android": "concurrently --kill-others --success first --names watch,android 'npm run watch' 'npm run start-and-build-android'",
    "start-and-build-android": "NO_SENTRY=1 IN_DEVELOPMENT=1 ANDROID=1 npm-run-all maybeinstall build:templates build:manifest build:intent-metadata start-android-extension",
    "start-android-extension": "web-ext run --target=firefox-android --source-dir extension/ --android-device ${ANDROID_DEVICE:-please_set_ANDROID_DEVICE} --firefox-apk ${FIREFOX_APK:-org.mozilla.firefox}",
    "test": "npm-run-all build:manifest build:intent-metadata lint test:selenium",
    "test-ci": "npm-run-all build:manifest build:intent-metadata lint",
    "jest": "npm run build:intent-metadata && jest",
    "build:templates": "mkdir -p extension/views && node bin/fill-templates.js",
    "build:deps": "mkdir -p extension/js/vendor/ extension/css/vendor/ ; for file in lottie-web/build/player/lottie.min.js webextension-polyfill/dist/browser-polyfill.min.js fuse.js/dist/fuse.js react/umd/react.production.min.js react-dom/umd/react-dom.production.min.js ; do cp node_modules/$file extension/js/vendor/ ; done ; cp \"node_modules/@sentry/browser/build/bundle.es6.min.js\" extension/js/vendor/sentry.js",
    "build:deps_porcupine": "mkdir -p extension/js/vendor/porcupine/ ; for file in porcupine_manager/src/porcupine_manager.js web-voice-processor/src/web_voice_processor.js porcupine_manager/src/porcupine_worker.js web-voice-processor/src/downsampling_worker.js porcupine_manager/src/pv_porcupine.js porcupine_manager/src/porcupine.js porcupine_manager/src/pv_porcupine.wasm ; do cp node_modules/@picovoice/$file extension/js/vendor/porcupine/ ; done",
    "build:manifest": "node bin/substitute-manifest.js",
    "build:intent-metadata": "node bin/parse-intent-toml.js",
    "build:ppn-listing": "node bin/generate-ppn-listing.js > extension/js/vendor/ppnListing.js",
    "build:jsx": "babel --relative --out-dir . --ignore gh-pages '**/*.jsx'",
    "build:browserify": "browserify --require freeze-dry --standalone freezeDry > extension/js/vendor/freezeDry.js",
    "test:selenium": "web-ext build -s extension --overwrite-dest && jest",
    "watch-rebuild": "npm-run-all build:jsx build:intent-metadata build:manifest",
    "watch": "nodemon --on-change-only -e toml,jsx,ejs --exec 'npm run watch-rebuild'",
    "maybeinstall": "if [[ package.json -nt node_modules/last_install.txt ]] ; then npm install && touch node_modules/last_install.txt ; fi",
    "format": "prettier 'extension/**/*.{js,jsx,css}' --write",
    "lint": "npm-run-all lint:*",
    "lint:css": "stylelint 'extension/**/*.css'",
    "lint:html": "htmllint extension/**/*.html",
    "lint:extension": "web-ext lint -s extension --self-hosted",
    "lint:js": "eslint --rule '{\"no-console\": \"error\"}' --ext 'js,jsx' extension/ bin/",
    "once": "web-ext run -s extension",
    "package": "npm-run-all build:* && web-ext build -s extension --overwrite-dest -i '**/*.ejs' -i '**/*.jsx' && mv web-ext-artifacts/*.zip addon.xpi ; echo ./addon.xpi created",
    "calculate-version": "node bin/calculate-version.js",
    "enumerate-phrases": "babel-node --plugins @babel/plugin-transform-modules-commonjs bin/enumerate-phrases.js",
    "postinstall": "npm-run-all build:*"
  }
}
